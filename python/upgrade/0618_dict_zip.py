# dict의 생성과 zip

d = {'a': 1, 'b': 2, 'c': 3}
print(type(d))
"""
1.
기존의 딕셔너리 형태를 만들면 다음과 같이 생성할 수 있다.
"""

d = dict([('a', 1), ('b', 2), ('c', 3)])
print(d)
d = dict(a = 1, b = 2, c = 3)
print(d)
"""
2.
이런 식으로 딕셔너리 형태를 구성할 수도 있다.
"""

d = dict(zip(['a', 'b', 'c'], [1, 2, 3]))
print(d)
"""
3.
하지만 우리는 파이썬에서 제공해주는 zip 모듈을 사용해서 딕셔너리를 구성할 수도 있다.
간단히 key값 리스트, value값 리스트 이렇게 나누어서 파라미터를 넣어준다고 생각하면 된다.
"""

z = zip(['a', 'b', 'c'], [1, 2, 3])
for i in z:
    print(i, end=', ')
"""
4.
zip 모듈에 대해서 조금 더 알아보자.
기존에 zip을 만들어서 이를 딕셔너리의 형태로 출력했었는데 형변환을 하지말고 반복문에 넣어보자.
튜플로 ('a', 1) 이런 식으로 패킹되어서 나오는 것을 알 수 있다.
여기서 알 수 있는 것은 zip은 하나씩 꺼내서 이를 매핑해주기 때문에 iterator 객체임을 알 수 있다.
"""

